import requests


def _get_baseurl(self):
    if self.url.startswith("https://github.com"):
        self.baseurl = "https://raw.githubusercontent.com"
    else:
        raise Exception("Only 'https://github.com' URLs are supported at the moment.")

def _retrieve_file(self):

    if not self.url[18:].startswith("/"):
        raise ValueError("Error extracting (user|organization) and/or repository " +
                         "information from the provided URL ({0}).".format(self.url))
    url_parts = self.url[19:].split('/')
    if len(url_parts) < 2:
        raise ValueError("Error extracting (user|organization) and/or repository " +
                         "information from the provided URL ({0}).".format(self.url))
    elif len(url_parts) == 2:
        org, repo, label = url_parts[0], url_parts[1], "master"
    else:
        if url_parts[2] != "tree":
            raise ValueError("Expected 'https://github.com/<org>/<repo>/tree/...' but instead "
                             "found '{0}'".format(url_parts[2]))
        org, repo, label = url_parts[0], url_parts[1], url_parts[3]

    self.file_url = "/".join([self.baseurl, org, repo, label, "CITATION.cff"])
    r = requests.get(self.file_url)
    if r.ok:
        self.cffstr = r.text
    else:
        raise Exception("Error requesting file: {0}".format(self.file_url))

